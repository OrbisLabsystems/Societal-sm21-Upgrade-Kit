{******************************************************************************
*
* Module Name   :
*
* Purpose       :
*
* Document Ref. :
*
* Specification :
*
* Portability   : Not Checked
*
* Re-entrant    : Yes
*
*******************************************************************************
*
* Modification History
* 
* Reference   Date          By             Description
* ---------   ------------  -----------    -------------------------------------
* 1.0         22-Jan-2016   H. Bryan	   Add file exists validation
* 2.0 	  13-Jun-2022   Raphael Castro   SampleManager 21 Report merge
*******************************************************************************}

SET COMPILE_OPTION DECLARE
SET NOTPROTECTED

JOIN LIBRARY $PROMPT_FILE
JOIN LIBRARY $LIB_RE_FILE_BROWSE
JOIN LIBRARY $LIB_UTILS               {1.0}

JOIN STANDARD_LIBRARY STD_CLASS
JOIN STANDARD_LIBRARY STD_MESSAGE
JOIN STANDARD_LIBRARY STD_OUTPUT
JOIN STANDARD_LIBRARY STD_PROMPT

CONSTANT LIB_RE_FILE_PROMPT = "LIB_RE_FILE_PROMPT"

{------------------------------------------------------------------------------}

GLOBAL
ROUTINE lib_re_file_initialise

	DEFINE CLASS "LIB_RE_RESULT_F"

		INHERIT
			"LIB_RE_RESULT"

		ACTIONS
			"GET_BROWSE_STRING",
			"PROMPT_FOR_TYPE"  ,
			"ENTER_FOR_TYPE"

	END CLASS

	prompt_file_initialise ( )

	DEFINE CLASS LIB_RE_FILE_PROMPT

		INHERIT
			PROMPT_FILE_CLASS

		ACTIONS
			"BROWSE"     ,
			"BUILD"      ,
			"VALIDATION"

	END CLASS

ENDROUTINE

{------------------------------------------------------------------------------}

ROUTINE lib_re_file_prompt_action_build ( file_prompt )

	DECLARE file_name, return_value

	file_name = strip ( file_prompt . text )

	IF blank ( file_name ) THEN

		return_value = FALSE

	ELSE

		lib_re_file_browse_file_view ( file_prompt . user_info )

		file_prompt . repaste ( )

		return_value = TRUE

	ENDIF

        RETURN ( return_value )

ENDROUTINE

{------------------------------------------------------------------------------}

ROUTINE lib_re_file_prompt_action_browse ( file_prompt )

	IF NOT file_prompt . display_only THEN

	        file_prompt . format_only = FALSE

		lib_re_file_browse_choose_file ( file_prompt )

		{ Not done this way anymore
		object_invoke_class ( file_prompt       ,
        	                      PROMPT_FILE_CLASS ,
	                              "BROWSE"          )
		}

        	file_prompt . format_only = TRUE

	ENDIF

        RETURN ( true )

ENDROUTINE

{------------------------------------------------------------------------------}

ROUTINE lib_re_file_prompt_action_validation ( file_prompt )

	DECLARE ret_value

	IF ( file_prompt . text = file_prompt . original_text ) THEN

		ret_value = TRUE

	ELSEIF BLANK ( file_prompt . text )  THEN

		ret_value = GLOBAL ( "RES_ALLOW_BLANK" )

		IF ret_value THEN

			file_prompt . user_info . blank_out_result (
			                file_prompt . user_info . grid )

		ENDIF

	{1.0}
	
	ELSEIF ( NOT ( FILE EXISTS ( file_prompt . text ) ) ) THEN
	
	    flash_message ( GET_USER_MESSAGE ( "ORL_FILE_UPLOAD_FILE_NOT_EXISTS", 1 ), FALSE )
		file_prompt . set_text ( file_prompt . original_text )
		
		ret_value = TRUE
		
	{/1.0}
	
	ELSE

		ret_value = TRUE

	ENDIF

	IF ret_value THEN
		ret_value = object_invoke_class ( file_prompt       ,
		                                  PROMPT_FILE_CLASS ,
		                                  "VALIDATION"      )
	ENDIF

	RETURN ( ret_value )

ENDROUTINE

{------------------------------------------------------------------------------}

ROUTINE lib_re_result_f_action_get_browse_string ( result_object )

	DECLARE comments

        IF NOT result_object . browse_built THEN

                message_fetch ( "RESULT_ENTRY_FILE_BROWSE",
                                result_object . browse_string )

                result_object . browse_built = TRUE

		comments = SELECT result . comments IN OBJECT result_object

		IF ( comments <>  NULL ) AND ( NOT BLANK ( comments )) THEN

			result_object . browse_string = result_object . browse_string :
			                                " | " :
			                                comments

		ENDIF

        ENDIF

        RETURN ( result_object . browse_string )

ENDROUTINE

{------------------------------------------------------------------------------}

ROUTINE lib_re_result_f_action_prompt_for_type (       result_object,
                                                 VALUE cell_column,
                                                 VALUE cell_row,
                                                       window,
                                                 VALUE column,
                                                 VALUE row,
                                                 VALUE cell_width,
                                                 VALUE cell_height,
                                                 VALUE display_only ,
                                                 VALUE blink_mode ,
                                                 VALUE foreground_colour,
                                                 VALUE background_colour,
                                                       result_context )

	result_context . display_message ( strip ( result_object . get_browse_string ( ) ), TRUE )

	PROMPT FOR result_object . result_str
	        ON LINE row FROM column TO ( column + cell_width - 1 )
	        IN WINDOW window
		CLASS LIB_RE_FILE_PROMPT
		WITH ( foreground_colour = foreground_colour ,
		       background_colour = background_colour ,
		       format_only   = TRUE ,
		       may_browse    = TRUE ,
		       double_entry  = global ( "RES_EXTENDED_BLIND_ENTRY" ) AND
		                       global ( "RES_SUPPRESS_ECHO" ),
		       display_only  = display_only ,
		       user_info     = result_object ,
		       blinking      = blink_mode ,
		       strikethrough = blink_mode ,
		       client_file   = ( GLOBAL ( "TERMTYPE") = "GUI" ))

	result_context . display_message ( "", FALSE )

ENDROUTINE

{------------------------------------------------------------------------------}

ROUTINE lib_re_result_f_action_enter_for_type (       result_object,
						VALUE result_val   ,
						      result_context)

        DECLARE prompt_object , return_value

        PROMPT OBJECT prompt_object
	       CLASS LIB_RE_FILE_PROMPT
	       WITH ( format_only  = TRUE          ,
	              user_info    = result_object )

	OBJECT_ASSIGN_UNCOUNTED ( result_object . grid, result_context )

	prompt_object . original_text = SELECT result . text IN OBJECT result_object
	prompt_object . text          = result_val

	IF ( prompt_object . validation ( ) ) THEN

		result_object . result_str = prompt_object . text

                return_value = EMPTY

	ELSE

                return_value = "RPC_K_INVALRESL"

        ENDIF

	return ( return_value )

ENDROUTINE

{------------------------------------------------------------------------------}
